{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Navbar from\"../../components/Navbar\";import styles from\"./ToDoList.module.css\";import{Input,Button,Divider,Modal,message,Tooltip,Tag,Select,Empty}from\"antd\";import{getErrorMessage}from\"../../util/GetError\";import{getUserDetails}from\"../../util/GetUser\";import ToDoServices from\"../../services/toDoServices\";import{useNavigate}from\"react-router\";import{CheckCircleFilled,CheckCircleOutlined,DeleteOutlined,EditOutlined}from\"@ant-design/icons\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ToDoList(){const[title,setTitle]=useState(\"\");const[description,setDescription]=useState(\"\");const[isAdding,setIsAdding]=useState(false);const[loading,setLoading]=useState(false);const[allToDo,setAllToDo]=useState([]);const[currentEditItem,setCurrentEditItem]=useState(\"\");const[isEditing,setIsEditing]=useState(false);const[updatedTitle,setUpdatedTitle]=useState(\"\");const[updatedDescription,setUpdatedDescription]=useState(\"\");const[updatedStatus,setUpdatedStatus]=useState(\"\");const[currentTaskType,setCurrentTaskType]=useState(\"Incomplete\");const[completedTodo,setCompletedTodo]=useState([]);const[incompletedTodo,setInCompletedTodo]=useState([]);const[currentTodoTask,setCurrentToDoTask]=useState([]);const[filteredToDo,setFilteredToDo]=useState([]);const navigate=useNavigate();const getAllTodo=async()=>{try{let user=getUserDetails();const response=await ToDoServices.getToDo(user===null||user===void 0?void 0:user.userId);console.log(response.data);setAllToDo(Array.isArray(response.data)?response.data:[]);}catch(error){console.log(error);message.error(getErrorMessage(error));}};useEffect(()=>{let user=getUserDetails();console.log(user===null||user===void 0?void 0:user.userId);const getAllTodo=async()=>{try{const response=await ToDoServices.getToDo(user===null||user===void 0?void 0:user.userId);console.log(\"ðŸš€ ToDo API response:\",response.data);setAllToDo(response.data);}catch(error){console.log(error);message.error(getErrorMessage(error));}};if(user&&user!==null&&user!==void 0&&user.userId){getAllTodo();}else{navigate(\"/login\");}},[navigate]);useEffect(()=>{const incomplete=allToDo.filter(item=>item.isCompleted===false);const complete=allToDo.filter(item=>item.isCompleted===true);setInCompletedTodo(incomplete);setCompletedTodo(complete);if(currentTaskType===\"Incomplete\"){setCurrentToDoTask(incomplete);}else{setCurrentToDoTask(complete);}},[allToDo,currentTaskType]);const handleSubmitTask=async()=>{setLoading(true);try{var _getUserDetails;const userId=(_getUserDetails=getUserDetails())===null||_getUserDetails===void 0?void 0:_getUserDetails.userId;const data={title,description,isCompleted:false,createdBy:userId};const response=await ToDoServices.createToDo(data);console.log(response.data);setLoading(false);message.success(\"ToDo Task Added Successfully\");setIsAdding(false);getAllTodo();}catch(error){console.log(error);message.error(getErrorMessage(error));}};const getFormattedDate=value=>{let date=new Date(value);let dateString=date.toDateString();let hours=date.getHours();let minutes=date.getMinutes();let seconds=date.getSeconds();let finalDate=\"\".concat(dateString,\" at \").concat(hours,\":\").concat(minutes,\":\").concat(seconds);return finalDate;};const handleEdit=item=>{console.log(item);setCurrentEditItem(item);setUpdatedTitle(item===null||item===void 0?void 0:item.title);setUpdatedDescription(item===null||item===void 0?void 0:item.description);setUpdatedStatus(item===null||item===void 0?void 0:item.isCompleted);setIsEditing(true);};const handleDelete=async item=>{try{const response=await ToDoServices.deleteToDo(item._id);console.log(response.data);message.success(\"\".concat(item.title,\" is Deleted Successfully!\"));getAllTodo();}catch(error){console.log(error);message.error(getErrorMessage(error));}};const handleUpdateStatus=async(id,status)=>{console.log(id);try{const response=await ToDoServices.updateToDo(id,{isCompleted:status});console.log(response.data);message.success(\"Task Status Updated Successfully!\");getAllTodo();}catch(error){console.log(error);message.error(getErrorMessage(error));}};const handleUpdateTask=async()=>{try{setLoading(true);const data={title:updatedTitle,description:updatedDescription,isCompleted:updatedStatus};console.log(data);const response=await ToDoServices.updateToDo(currentEditItem===null||currentEditItem===void 0?void 0:currentEditItem._id,data);console.log(response.data);message.success(\"\".concat(currentEditItem===null||currentEditItem===void 0?void 0:currentEditItem.title,\" Updated Successfully\"));setLoading(false);setIsEditing(false);getAllTodo();}catch(error){console.log(error);setLoading(false);message.error(getErrorMessage(error));}};const handleTypeChange=value=>{console.log(value);setCurrentTaskType(value);if(value===\"Incomplete\"){setCurrentToDoTask(incompletedTodo);}else{setCurrentToDoTask(completedTodo);}};const handleSearch=e=>{let query=e.target.value;let filteredList=allToDo.filter(item=>item.title.toLowerCase().match(query.toLowerCase()));console.log(filteredList);if(filteredList.length>0&&query){setFilteredToDo(filteredList);}else{setFilteredToDo([]);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{active:\"myTask\"}),/*#__PURE__*/_jsxs(\"section\",{className:styles.toDoWrapper,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoHeader,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Tasks\"}),/*#__PURE__*/_jsx(Input,{style:{width:\"50%\"},onChange:handleSearch,placeholder:\"Search Your Task Here...\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setIsAdding(true),type:\"primary\",size:\"large\",children:\"Add Task\"}),/*#__PURE__*/_jsx(Select,{value:currentTaskType,style:{width:180,marginLeft:\"10px\"},onChange:handleTypeChange,size:\"large\",options:[{value:\"Incomplete\",label:\"Incomplete\"},{value:\"Complete\",label:\"Complete\"}]})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:styles.toDoListCardWrapper,children:filteredToDo.length>0?filteredToDo.map(item=>{return/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCard,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:item===null||item===void 0?void 0:item.title}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tag,{color:\"cyan\",children:\"Completed\"}):/*#__PURE__*/_jsx(Tag,{color:\"red\",children:\"Incomplete\"})]}),/*#__PURE__*/_jsx(\"p\",{children:item===null||item===void 0?void 0:item.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardFooter,children:[/*#__PURE__*/_jsx(Tag,{children:getFormattedDate(item===null||item===void 0?void 0:item.createdAt)}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoFooterAction,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Edit Task?\",children:/*#__PURE__*/_jsx(EditOutlined,{onClick:()=>handleEdit(item),className:styles.actionIcon})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete Task?\",children:/*#__PURE__*/_jsx(DeleteOutlined,{onClick:()=>handleDelete(item),style:{color:\"red\"},className:styles.actionIcon})}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tooltip,{title:\"Mark as Incomplete\",children:/*#__PURE__*/_jsx(CheckCircleFilled,{onClick:()=>handleUpdateStatus(item._id,false),style:{color:\"green\"},className:styles.actionIcon})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Mark as Completed\",children:/*#__PURE__*/_jsx(CheckCircleOutlined,{onClick:()=>handleUpdateStatus(item._id,true),className:styles.actionIcon})})]})]})]},item===null||item===void 0?void 0:item._id);}):currentTodoTask.length>0?currentTodoTask.map(item=>{return/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCard,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:item===null||item===void 0?void 0:item.title}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tag,{color:\"cyan\",children:\"Completed\"}):/*#__PURE__*/_jsx(Tag,{color:\"red\",children:\"Incomplete\"})]}),/*#__PURE__*/_jsx(\"p\",{children:item===null||item===void 0?void 0:item.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardFooter,children:[/*#__PURE__*/_jsx(Tag,{children:getFormattedDate(item===null||item===void 0?void 0:item.createdAt)}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoFooterAction,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Edit Task?\",children:/*#__PURE__*/_jsx(EditOutlined,{onClick:()=>handleEdit(item),className:styles.actionIcon})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete Task?\",children:/*#__PURE__*/_jsx(DeleteOutlined,{onClick:()=>handleDelete(item),style:{color:\"red\"},className:styles.actionIcon})}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tooltip,{title:\"Mark as Incomplete\",children:/*#__PURE__*/_jsx(CheckCircleFilled,{onClick:()=>handleUpdateStatus(item._id,false),style:{color:\"green\"},className:styles.actionIcon})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Mark as Completed\",children:/*#__PURE__*/_jsx(CheckCircleOutlined,{onClick:()=>handleUpdateStatus(item._id,true),className:styles.actionIcon})})]})]})]},item===null||item===void 0?void 0:item._id);}):/*#__PURE__*/_jsx(\"div\",{className:styles.noTaskWrapper,children:/*#__PURE__*/_jsx(Empty,{})})}),/*#__PURE__*/_jsxs(Modal,{confirmLoading:loading,title:\"Add New To Do Task\",open:isAdding,onOk:handleSubmitTask,onCancel:()=>setIsAdding(false),children:[/*#__PURE__*/_jsx(Input,{style:{marginBottom:\"1rem\"},placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value)})]}),/*#__PURE__*/_jsxs(Modal,{confirmLoading:loading,title:\"Update \".concat(currentEditItem.title),open:isEditing,onOk:handleUpdateTask,onCancel:()=>setIsEditing(false),children:[/*#__PURE__*/_jsx(Input,{style:{marginBottom:\"1rem\"},placeholder:\"Updated Title\",value:updatedTitle,onChange:e=>setUpdatedTitle(e.target.value)}),/*#__PURE__*/_jsx(Input.TextArea,{style:{marginBottom:\"1rem\"},placeholder:\"Updated Description\",value:updatedDescription,onChange:e=>setUpdatedDescription(e.target.value)}),/*#__PURE__*/_jsx(Select,{onChange:value=>setUpdatedStatus(value),value:updatedStatus,options:[{value:false,label:\"Not Completed\"},{value:true,label:\"Completed\"}]})]})]})]});}export default ToDoList;","map":{"version":3,"names":["React","useState","useEffect","Navbar","styles","Input","Button","Divider","Modal","message","Tooltip","Tag","Select","Empty","getErrorMessage","getUserDetails","ToDoServices","useNavigate","CheckCircleFilled","CheckCircleOutlined","DeleteOutlined","EditOutlined","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ToDoList","title","setTitle","description","setDescription","isAdding","setIsAdding","loading","setLoading","allToDo","setAllToDo","currentEditItem","setCurrentEditItem","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","updatedDescription","setUpdatedDescription","updatedStatus","setUpdatedStatus","currentTaskType","setCurrentTaskType","completedTodo","setCompletedTodo","incompletedTodo","setInCompletedTodo","currentTodoTask","setCurrentToDoTask","filteredToDo","setFilteredToDo","navigate","getAllTodo","user","response","getToDo","userId","console","log","data","Array","isArray","error","incomplete","filter","item","isCompleted","complete","handleSubmitTask","_getUserDetails","createdBy","createToDo","success","getFormattedDate","value","date","Date","dateString","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","finalDate","concat","handleEdit","handleDelete","deleteToDo","_id","handleUpdateStatus","id","status","updateToDo","handleUpdateTask","handleTypeChange","handleSearch","e","query","target","filteredList","toLowerCase","match","length","children","active","className","toDoWrapper","toDoHeader","style","width","onChange","placeholder","onClick","type","size","marginLeft","options","label","toDoListCardWrapper","map","toDoCard","toDoCardHeader","color","toDoCardFooter","createdAt","toDoFooterAction","actionIcon","noTaskWrapper","confirmLoading","open","onOk","onCancel","marginBottom","TextArea"],"sources":["/Users/jaswanthi/Desktop/ToDo App/client/src/pages/ToDo/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport styles from \"./ToDoList.module.css\";\nimport {\n  Input,\n  Button,\n  Divider,\n  Modal,\n  message,\n  Tooltip,\n  Tag,\n  Select,\n  Empty,\n} from \"antd\";\nimport { getErrorMessage } from \"../../util/GetError\";\nimport { getUserDetails } from \"../../util/GetUser\";\nimport ToDoServices from \"../../services/toDoServices\";\nimport { useNavigate } from \"react-router\";\nimport {\n  CheckCircleFilled,\n  CheckCircleOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\n\nfunction ToDoList() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [allToDo, setAllToDo] = useState([]);\n  const [currentEditItem, setCurrentEditItem] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const [updatedStatus, setUpdatedStatus] = useState(\"\");\n  const [currentTaskType, setCurrentTaskType] = useState(\"Incomplete\");\n  const [completedTodo, setCompletedTodo] = useState([]);\n  const [incompletedTodo, setInCompletedTodo] = useState([]);\n  const [currentTodoTask, setCurrentToDoTask] = useState([]);\n  const [filteredToDo, setFilteredToDo] = useState([]);\n\n  const navigate = useNavigate();\n\n  const getAllTodo = async () => {\n    try {\n      let user = getUserDetails();\n      const response = await ToDoServices.getToDo(user?.userId);\n      console.log(response.data);\n      setAllToDo(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.log(error);\n      message.error(getErrorMessage(error));\n    }\n  };\n\n  useEffect(() => {\n    let user = getUserDetails();\n    console.log(user?.userId);\n    const getAllTodo = async () => {\n      try {\n        const response = await ToDoServices.getToDo(user?.userId);\n\n        console.log(\"ðŸš€ ToDo API response:\", response.data);\n\n        setAllToDo(response.data);\n      } catch (error) {\n        console.log(error);\n        message.error(getErrorMessage(error));\n      }\n    };\n    if (user && user?.userId) {\n      getAllTodo();\n    } else {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const incomplete = allToDo.filter((item) => item.isCompleted === false);\n\n    const complete = allToDo.filter((item) => item.isCompleted === true);\n    setInCompletedTodo(incomplete);\n    setCompletedTodo(complete);\n    if (currentTaskType === \"Incomplete\") {\n      setCurrentToDoTask(incomplete);\n    } else {\n      setCurrentToDoTask(complete);\n    }\n  }, [allToDo, currentTaskType]);\n\n  const handleSubmitTask = async () => {\n    setLoading(true);\n    try {\n      const userId = getUserDetails()?.userId;\n      const data = {\n        title,\n        description,\n        isCompleted: false,\n        createdBy: userId,\n      };\n      const response = await ToDoServices.createToDo(data);\n      console.log(response.data);\n      setLoading(false);\n      message.success(\"ToDo Task Added Successfully\");\n      setIsAdding(false);\n      getAllTodo();\n    } catch (error) {\n      console.log(error);\n      message.error(getErrorMessage(error));\n    }\n  };\n\n  const getFormattedDate = (value) => {\n    let date = new Date(value);\n    let dateString = date.toDateString();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n    let finalDate = `${dateString} at ${hours}:${minutes}:${seconds}`;\n    return finalDate;\n  };\n\n  const handleEdit = (item) => {\n    console.log(item);\n    setCurrentEditItem(item);\n    setUpdatedTitle(item?.title);\n    setUpdatedDescription(item?.description);\n    setUpdatedStatus(item?.isCompleted);\n    setIsEditing(true);\n  };\n\n  const handleDelete = async (item) => {\n    try {\n      const response = await ToDoServices.deleteToDo(item._id);\n      console.log(response.data);\n      message.success(`${item.title} is Deleted Successfully!`);\n      getAllTodo();\n    } catch (error) {\n      console.log(error);\n      message.error(getErrorMessage(error));\n    }\n  };\n\n  const handleUpdateStatus = async (id, status) => {\n    console.log(id);\n    try {\n      const response = await ToDoServices.updateToDo(id, {\n        isCompleted: status,\n      });\n      console.log(response.data);\n      message.success(\"Task Status Updated Successfully!\");\n      getAllTodo();\n    } catch (error) {\n      console.log(error);\n      message.error(getErrorMessage(error));\n    }\n  };\n\n  const handleUpdateTask = async () => {\n    try {\n      setLoading(true);\n      const data = {\n        title: updatedTitle,\n        description: updatedDescription,\n        isCompleted: updatedStatus,\n      };\n      console.log(data);\n      const response = await ToDoServices.updateToDo(\n        currentEditItem?._id,\n        data\n      );\n      console.log(response.data);\n      message.success(`${currentEditItem?.title} Updated Successfully`);\n      setLoading(false);\n      setIsEditing(false);\n      getAllTodo();\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      message.error(getErrorMessage(error));\n    }\n  };\n\n  const handleTypeChange = (value) => {\n    console.log(value);\n    setCurrentTaskType(value);\n    if (value === \"Incomplete\") {\n      setCurrentToDoTask(incompletedTodo);\n    } else {\n      setCurrentToDoTask(completedTodo);\n    }\n  };\n\n  const handleSearch = (e) => {\n    let query = e.target.value;\n    let filteredList = allToDo.filter((item) =>\n      item.title.toLowerCase().match(query.toLowerCase())\n    );\n    console.log(filteredList);\n    if (filteredList.length > 0 && query) {\n      setFilteredToDo(filteredList);\n    } else {\n      setFilteredToDo([]);\n    }\n  };\n\n  return (\n    <>\n      <Navbar active={\"myTask\"} />\n      <section className={styles.toDoWrapper}>\n        <div className={styles.toDoHeader}>\n          <h2>Your Tasks</h2>\n          <Input\n            style={{ width: \"50%\" }}\n            onChange={handleSearch}\n            placeholder=\"Search Your Task Here...\"\n          />\n          <div>\n            <Button\n              onClick={() => setIsAdding(true)}\n              type=\"primary\"\n              size=\"large\"\n            >\n              Add Task\n            </Button>\n            <Select\n              value={currentTaskType}\n              style={{ width: 180, marginLeft: \"10px\" }}\n              onChange={handleTypeChange}\n              size=\"large\"\n              options={[\n                { value: \"Incomplete\", label: \"Incomplete\" },\n                { value: \"Complete\", label: \"Complete\" },\n              ]}\n            />\n          </div>\n        </div>\n        <Divider />\n\n        <div className={styles.toDoListCardWrapper}>\n          {filteredToDo.length > 0 ? (\n            filteredToDo.map((item) => {\n              return (\n                <div key={item?._id} className={styles.toDoCard}>\n                  <div>\n                    <div className={styles.toDoCardHeader}>\n                      <h3>{item?.title}</h3>\n                      {item?.isCompleted ? (\n                        <Tag color=\"cyan\">Completed</Tag>\n                      ) : (\n                        <Tag color=\"red\">Incomplete</Tag>\n                      )}\n                    </div>\n                    <p>{item?.description}</p>\n                  </div>\n\n                  <div className={styles.toDoCardFooter}>\n                    <Tag>{getFormattedDate(item?.createdAt)}</Tag>\n                    <div className={styles.toDoFooterAction}>\n                      <Tooltip title=\"Edit Task?\">\n                        <EditOutlined\n                          onClick={() => handleEdit(item)}\n                          className={styles.actionIcon}\n                        />\n                      </Tooltip>\n                      <Tooltip title=\"Delete Task?\">\n                        <DeleteOutlined\n                          onClick={() => handleDelete(item)}\n                          style={{ color: \"red\" }}\n                          className={styles.actionIcon}\n                        />\n                      </Tooltip>\n                      {item?.isCompleted ? (\n                        <Tooltip title=\"Mark as Incomplete\">\n                          <CheckCircleFilled\n                            onClick={() => handleUpdateStatus(item._id, false)}\n                            style={{ color: \"green\" }}\n                            className={styles.actionIcon}\n                          />\n                        </Tooltip>\n                      ) : (\n                        <Tooltip title=\"Mark as Completed\">\n                          <CheckCircleOutlined\n                            onClick={() => handleUpdateStatus(item._id, true)}\n                            className={styles.actionIcon}\n                          />\n                        </Tooltip>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          ) : currentTodoTask.length > 0 ? (\n            currentTodoTask.map((item) => {\n              return (\n                <div key={item?._id} className={styles.toDoCard}>\n                  <div>\n                    <div className={styles.toDoCardHeader}>\n                      <h3>{item?.title}</h3>\n                      {item?.isCompleted ? (\n                        <Tag color=\"cyan\">Completed</Tag>\n                      ) : (\n                        <Tag color=\"red\">Incomplete</Tag>\n                      )}\n                    </div>\n                    <p>{item?.description}</p>\n                  </div>\n\n                  <div className={styles.toDoCardFooter}>\n                    <Tag>{getFormattedDate(item?.createdAt)}</Tag>\n                    <div className={styles.toDoFooterAction}>\n                      <Tooltip title=\"Edit Task?\">\n                        <EditOutlined\n                          onClick={() => handleEdit(item)}\n                          className={styles.actionIcon}\n                        />\n                      </Tooltip>\n                      <Tooltip title=\"Delete Task?\">\n                        <DeleteOutlined\n                          onClick={() => handleDelete(item)}\n                          style={{ color: \"red\" }}\n                          className={styles.actionIcon}\n                        />\n                      </Tooltip>\n                      {item?.isCompleted ? (\n                        <Tooltip title=\"Mark as Incomplete\">\n                          <CheckCircleFilled\n                            onClick={() => handleUpdateStatus(item._id, false)}\n                            style={{ color: \"green\" }}\n                            className={styles.actionIcon}\n                          />\n                        </Tooltip>\n                      ) : (\n                        <Tooltip title=\"Mark as Completed\">\n                          <CheckCircleOutlined\n                            onClick={() => handleUpdateStatus(item._id, true)}\n                            className={styles.actionIcon}\n                          />\n                        </Tooltip>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className={styles.noTaskWrapper}>\n              <Empty />\n            </div>\n          )}\n        </div>\n\n        <Modal\n          confirmLoading={loading}\n          title=\"Add New To Do Task\"\n          open={isAdding}\n          onOk={handleSubmitTask}\n          onCancel={() => setIsAdding(false)}\n        >\n          <Input\n            style={{ marginBottom: \"1rem\" }}\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Input.TextArea\n            placeholder=\"Description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Modal>\n\n        <Modal\n          confirmLoading={loading}\n          title={`Update ${currentEditItem.title}`}\n          open={isEditing}\n          onOk={handleUpdateTask}\n          onCancel={() => setIsEditing(false)}\n        >\n          <Input\n            style={{ marginBottom: \"1rem\" }}\n            placeholder=\"Updated Title\"\n            value={updatedTitle}\n            onChange={(e) => setUpdatedTitle(e.target.value)}\n          />\n          <Input.TextArea\n            style={{ marginBottom: \"1rem\" }}\n            placeholder=\"Updated Description\"\n            value={updatedDescription}\n            onChange={(e) => setUpdatedDescription(e.target.value)}\n          />\n          <Select\n            onChange={(value) => setUpdatedStatus(value)}\n            value={updatedStatus}\n            options={[\n              {\n                value: false,\n                label: \"Not Completed\",\n              },\n\n              {\n                value: true,\n                label: \"Completed\",\n              },\n            ]}\n          />\n        </Modal>\n      </section>\n    </>\n  );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}